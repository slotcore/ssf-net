<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CmdGen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        R/6L52/i/xevN9QiqW+tvAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="CmdSal.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>